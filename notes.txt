here is is 3rd JOB portal Project
here i will list things that i have did in this Project
1, first edited the users migrations file and add some more colums
2, created Home Controller and index method
3, created front folder and home.blade file
4, brought assest folder from d drive to public folder 

REMOVED FRONT FOLDER 
5, created layouts and app.blade file

6,created registration file controller and folder
7, using Ajax for form submission its my first time doign this

8, finally understand what is ajax fetchapi axios inertia 

9, fetch api is better than ajax;
 gand fath rahai hai ajjj

 10, today we will work with user profile



 composer require intervention/image
./composer.json 


install this package for profile thumbnails


finally fixed error now i can work


11, Post a JOB module

seriliaze array method 

ek array create karega  aur us array kay jitni bhe forms kay andr fields hongi unko object kay from mai store karega

har key value kay lye ek object banayega



created ajax for create jobs controller and routes


one imp thing
to alter a table and add extra columns

php artisan make:migration alter_jobs_table

this will alter the specfic 
and inside file

instead of schema::create we will use schema::table


// explored about fake() 
got more fake reallife methods



to fix pagination 

in app servis provider file
use Illuminate\Pagination\Paginator;

 public function boot(): void
    {
        Paginator::useBootstrapFive();
    }



      'company_website'
                ]) + ['user_id' => Auth::id()]);

                ye plus dono arrays ko merge krta hai
                



 <p>{{ Str::words($featuredJob->description, '10') }}</p>

Str ko captial likho
 in blade files pury description se numbers of words ko show karana hotoh



 till now everything is fixed
 now ill show jobs page and apply filters this will be fun

 done


 composer require barryvdh/laravel-debugbar --dev  

 installed this package rn now don't know what to do with this



 !imp


 orwhere query functgion kay andr likhne hai




   //search using jobType
        if (!empty($request->jobType)) {
           $jobTypeArray = explode(',', $request->jobType);
            $jobs = $jobs->whereIn('job_type_id', $jobTypeArray);
        } 

        this is an importana query




        in_array imp 
        first paramater mai wo bejtha jsko mujhe search krna hai 2nd paramter kay array mai;  agr milta hai toh true return arega

        $colors = ['red', 'green', 'blue'];
$search = 'green';

if (in_array($search, $colors)) {
    echo "Mil gaya!";
} else {
    echo "Nahi mila!";
}
// Output: "Mil gaya!"




---------------------------------------------------------------------------
javascript
Copy
// Step 1: Create a new URLSearchParams object
const params = new URLSearchParams();

// Step 2: Add key-value pairs (like ?name=John&age=25)
params.append("name", "John");  // Adds "name=John"
params.append("age", "25");     // Adds "age=25"

// Step 3: Convert to a query string
console.log(params.toString()); // Output: "name=John&age=25"
How It Works:
new URLSearchParams() → Creates an empty object to store parameters.

.append(key, value) → Adds a new parameter.

.toString() → Converts all parameters into a URL-friendly string.

https://example.com/search?query=javascript&page=1



You can use:

javascript
Copy
const params = new URLSearchParams();
params.append("query", "javascript");
params.append("page", "1");

const url = `https://example.com/search?${params.toString()}`;
console.log(url); 
// Output: "https://example.com/search?query=javascript&page=1"